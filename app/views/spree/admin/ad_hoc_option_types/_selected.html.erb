<h3>Add Option Types</h3>
<p>These can be used to dynamically create ad hoc variants</p>
<% if @option_types.any? %>
  <table class="table index" id='ad_hoc_option_types' data-hook>
    <thead>
      <tr data-hook="ad_hoc_option_types_header">
        <th><%= Spree.t("name") %></th>
        <th><%= Spree.t("presentation") %></th>
        <th><%= Spree.t("required") %></th>
        <th class="actions"></th>
      </tr>
    </thead>
    <tbody>
      <% @option_types.each do |ad_hoc_option_type| %>
        <% if ad_hoc_option_type.option_type.id.to_s == @last_selected_option_type_id %>
          <%# do we need to do the 'first time' forced-edit/save of new option values? %>
          <%= render partial: "form", locals: { f: f } %>
          <%= render partial: "selected_edit", locals: { ahot: ad_hoc_option_type } %>
        <% else %>
          <tr>
            <td class='name'><%= ad_hoc_option_type.option_type.name %></td>
            <td class='presentation'><%= ad_hoc_option_type.option_type.presentation %></td>
            <td class='is_reqired'><%= ad_hoc_option_type.is_required %></td>
            <td class="actions actions-2 text-right">
              <%= link_to_edit ad_hoc_option_type, no_text: true %>
              <!-- <%#= link_to_delete ad_hoc_option_type, no_text: true %> -->
              <%= link_to_with_icon 'delete', '', remove_admin_ad_hoc_option_type_url(ad_hoc_option_type), class: 'btn btn-danger btn-sm' %>
            </td>
          </tr>
        <% end %>
      <% end %>
    </tbody>
  </table>
<% else %>
  <div class="alert alert-info no-objects-found">
    <%= Spree.t(:no_resource_found, resource: plural_resource_name(Spree::AdHocOptionType)) %>,
    <%= link_to Spree.t(:add_one), spree.available_ad_hoc_admin_product_option_types_url(@product), remote: :true %>!
  </div>
<% end %>

<div id="option-types"></div>
<span id="new_opt_link">
  <!-- THIS pulls up the 'available' list below -->
  <%= link_to_with_icon 'add', Spree.t("add_option_type"), available_ad_hoc_admin_product_option_types_url(@product), remote: :true %>
</span>
