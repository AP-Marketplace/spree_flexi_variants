<div id="product-customizations">
<!--   <div class="flash notice" style="display: none;"></div> -->
<% @product.product_customization_types.each do |product_customization_type| %>

   <%= hidden_field_tag product_customization_type, '0', {:class=>'customization_price'} %>  <!-- this is a critical field.  we use it to store pricing info returned from thhe server and later used by updatePrice() -->
   <% # = render :partial => product_customization_type.name, :locals => {:customization_type=>customization_type} %> 

   <h2><%=  product_customization_type.presentation %></h2>
   <% if product_customization_type.description %>
     <h3><%=  product_customization_type.description %></h3>
   <% end %>

   <% param_prefix = "product_customizations[#{product_customization_type.id}]" %>

  <% product_customization_type.customizable_product_options.each do |option| %>
    <%= label_tag option.presentation %>

    <% partial = option.partial %>

    <!-- hate to use exception as flow control, b/c the 'rescue' is likelier to occur than the custom partial.
         I used a File.exists? but didn't want to use Rails.root (as this is an extension. Alternative?  cwd? -->
    <% begin %>
      <%= render :partial => "products/custom_fields/#{partial}", :locals=>{:option => option, :param_prefix => param_prefix} %>
    <% rescue %>	 
     <%= text_field_tag "#{param_prefix}[#{option.id}]", '', {:class=>'customization'} %>
    <% end %>	
    <br/>
  <% end %>

<% end %>

</div> <!-- product-customizationss -->
